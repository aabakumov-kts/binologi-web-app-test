name: Primary CI/CD workflow

on:
  push:
    branches:
      - develop
      - 'release**'
      - 'hotfix**'
      - master
      - main

concurrency: ${{ github.ref_name }}

jobs:
  build-main-image:
    name: "Build & push main image"
    runs-on: ubuntu-latest
    env:
      IMAGE_REPO: ghcr.io/aabakumov-kts/legacy-web-app
      IMAGE_TAG: ${{ github.ref_name }}.${{ github.run_id }}
      DOCKER_LOGIN: ${{ github.actor }}
      DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ env.DOCKER_LOGIN }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and push main image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}

  run-tests:
    name: "Runs linters & tests"
    needs: build-main-image
    runs-on: ubuntu-latest
    env:
      IMAGE_REPO: ghcr.io/aabakumov-kts/legacy-web-app
      IMAGE_TAG: ${{ github.ref_name }}.${{ github.run_id }}
    container:
      image: ${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}
      env:
        SENTRY_ORG: binology
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    services:
      postgres:
        image: mdillon/postgis:11-alpine
      redis:
        image: redis:5.0.8-alpine
    steps:
      - name: Run linter
        run: cd /app && flake8

      - name: Run unit tests
        run: cd /app && python -m unittest discover tests/plain

      - name: Run Django tests
        run: >-
          cd /app && /bin/sh -c 'until pg_isready -h postgres; do sleep 5; done &&
          python manage.py test tests/django'

      - name: Update Sentry release info
        if: startsWith(github.ref_name, 'release')
        run: >-
          cd /app && /bin/sh -c 'sentry-cli releases new -p legacy-web-app $(sed "1q;d" release-info.txt) &&
          sentry-cli releases set-commits
          --commit "binologygroup/legacy-web-app@$(sed "2q;d" release-info.txt)..$GITHUB_SHA"
          $(sed "1q;d" release-info.txt)'

  deploy:
    name: "Deploy via Ansible"
    needs: run-tests
    runs-on: ubuntu-latest
    env:
      IMAGE_REPO: ghcr.io/aabakumov-kts/legacy-web-app
      IMAGE_TAG: ${{ github.ref_name }}.${{ github.run_id }}
      DOCKER_LOGIN: ${{ github.actor }}
      DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Define environment
        run: |
          if [[ "${{ github.ref_name }}" == "develop" ]]; then
            echo "TARGET_ENV=dev" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == "master" ]]; then
            echo "TARGET_ENV=demo" >> $GITHUB_ENV
          elif [[ "${{ github.ref_name }}" == release* || "${{ github.ref_name }}" == hotfix* ]]; then
            echo "TARGET_ENV=stage" >> $GITHUB_ENV
          fi

      - name: Install Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}
          known_hosts: |
            51.250.89.169
            130.193.38.26
            158.160.49.120
            158.160.59.197

      - name: Deploy using Ansible
        uses: dawidd6/action-ansible-playbook@v3
        with:
          playbook: master.yml
          directory: ansible/
          key: ${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}
          options: |
            -i inventory/hosts.ini
            --extra-vars "web_app_repo=${{ env.IMAGE_REPO }} web_app_version=${{ env.IMAGE_TAG }} DOCKER_LOGIN=${{ env.DOCKER_LOGIN }} DOCKER_PASSWORD=${{ env.DOCKER_PASSWORD }}"
            --limit ${{ env.TARGET_ENV }}

  # trigger-e2e-tests:
  #   name: "Trigger E2E tests"
  #   needs: deploy
  #   runs-on: ubuntu-latest
  #   if: github.ref_name == 'develop' || startsWith(github.ref_name, 'release') || startsWith(github.ref_name, 'hotfix')
  #   steps:
  #     - name: Define E2E ref - DEVELOP
  #       if: github.ref_name == 'develop'
  #       run: echo "E2E_REF=develop" >> $GITHUB_ENV

  #     - name: Define E2E ref - MASTER
  #       if: startsWith(github.ref_name, 'release') || startsWith(github.ref_name, 'hotfix')
  #       run: echo "E2E_REF=master" >> $GITHUB_ENV

  #     - name: Trigger E2E workflow
  #       run: >-
  #         curl 
  #         -X POST
  #         -H "Accept: application/vnd.github+json"
  #         -H "Authorization: Bearer ${{ secrets.E2E_TRIGGER_PAT }}"
  #         -H "X-GitHub-Api-Version: 2022-11-28"
  #         https://api.github.com/repos/binologygroup/saas-e2e-tests/actions/workflows/build.yml/dispatches
  #         -d '{"ref":"${{ env.E2E_REF }}"}'

  # deploy-release-in-sentry:
  #   name: "Deploy release in Sentry"
  #   needs: deploy
  #   runs-on: ubuntu-latest
  #   if: github.ref_name == 'master' || startsWith(github.ref_name, 'release')
  #   container:
  #     image: dibinology/legacy-web-app-ci:${{ github.ref_name }}.${{ github.run_id }}
  #     credentials:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_PASSWORD }}
  #     env:
  #       SENTRY_ORG: binology
  #       SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  #   steps:
  #     - name: Update Sentry release info - STAGE
  #       if: startsWith(github.ref_name, 'release')
  #       run: cd /app && /bin/sh -c 'sentry-cli releases deploys $(sed "1q;d" release-info.txt) new -e Stage'

  #     - name: Update Sentry release info - DEMO
  #       if: github.ref_name == 'master'
  #       run: cd /app && /bin/sh -c 'sentry-cli releases deploys $(sed "1q;d" release-info.txt) new -e Demo'

  #     - name: Update Sentry release info - PROD
  #       if: github.ref_name == 'master'
  #       run: cd /app && /bin/sh -c 'sentry-cli releases deploys $(sed "1q;d" release-info.txt) new -e Prod'

  #     - name: Finalize Sentry release info
  #       if: github.ref_name == 'master'
  #       run: cd /app && /bin/sh -c 'sentry-cli releases finalize $(sed "1q;d" release-info.txt)'
