name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      - release**
      - hotfix**
      - master
      - main

concurrency: ${{ github.ref_name }}

jobs:
  build-and-push:
    name: "Build, Test & Push Docker Image"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Define Docker Image Tag
        run: echo "DOCKER_IMAGE_TAG=${{ github.ref_name }}-${{ github.run_id }}" >> $GITHUB_ENV

      - name: Build Docker Image
        run: docker build -t dibinology/legacy-web-app:${{ env.DOCKER_IMAGE_TAG }} .

      - name: Run Tests in Docker Container
        run: |
          docker run --rm dibinology/legacy-web-app:${{ env.DOCKER_IMAGE_TAG }} flake8
          docker run --rm dibinology/legacy-web-app:${{ env.DOCKER_IMAGE_TAG }} python -m unittest discover tests/plain
          docker run --rm dibinology/legacy-web-app:${{ env.DOCKER_IMAGE_TAG }} python manage.py test tests/django

      - name: Push Docker Image
        run: |
          docker tag dibinology/legacy-web-app:${{ env.DOCKER_IMAGE_TAG }} dibinology/legacy-web-app:latest
          docker push dibinology/legacy-web-app:${{ env.DOCKER_IMAGE_TAG }}
          docker push dibinology/legacy-web-app:latest

  deploy:
    name: "Deploy via Ansible"
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}
          known_hosts: |
            51.250.89.169
            130.193.38.26
            158.160.49.120
            158.160.59.197

      - name: Deploy using Ansible
        uses: dawidd6/action-ansible-playbook@v3
        with:
          playbook: ansible/master.yml
          directory: ansible/
          inventory: ansible/inventory/hosts.ini
          key: ${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}
          options: |
            --extra-vars "web_app_version=${{ env.DOCKER_IMAGE_TAG }}"
            --limit dev
            -vvv

  # trigger-e2e-tests:
  #   name: "Trigger E2E Tests"
  #   needs: deploy
  #   runs-on: ubuntu-latest
  #   if: github.ref_name == 'develop' || startsWith(github.ref_name, 'release') || startsWith(github.ref_name, 'hotfix')
  #   steps:
  #     - name: Set E2E ref
  #       run: |
  #         if [[ "${{ github.ref_name }}" == "develop" ]]; then
  #           echo "E2E_REF=develop" >> $GITHUB_ENV
  #         else
  #           echo "E2E_REF=master" >> $GITHUB_ENV
  #         fi

  #     - name: Trigger E2E workflow
  #       run: |
  #         curl -X POST -H "Accept: application/vnd.github+json" \
  #         -H "Authorization: Bearer ${{ secrets.E2E_TRIGGER_PAT }}" \
  #         -H "X-GitHub-Api-Version: 2022-11-28" \
  #         https://api.github.com/repos/binologygroup/saas-e2e-tests/actions/workflows/build.yml/dispatches \
  #         -d '{"ref":"${{ env.E2E_REF }}"}'

  # deploy-release-in-sentry:
  #   name: "Deploy Release in Sentry"
  #   needs: deploy
  #   runs-on: ubuntu-latest
  #   if: github.ref_name == 'master' || startsWith(github.ref_name, 'release')
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Update Sentry release info - STAGE
  #       if: startsWith(github.ref_name, 'release')
  #       run: sentry-cli releases deploys $(sed "1q;d" release-info.txt) new -e Stage

  #     - name: Update Sentry release info - DEMO
  #       if: github.ref_name == 'master'
  #       run: sentry-cli releases deploys $(sed "1q;d" release-info.txt) new -e Demo

  #     - name: Update Sentry release info - PROD
  #       if: github.ref_name == 'master'
  #       run: sentry-cli releases deploys $(sed "1q;d" release-info.txt) new -e Prod

  #     - name: Finalize Sentry release
  #       if: github.ref_name == 'master'
  #       run: sentry-cli releases finalize $(sed "1q;d" release-info.txt)
