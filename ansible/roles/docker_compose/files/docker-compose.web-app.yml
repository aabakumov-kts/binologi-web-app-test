services:
  mnt-svc:
    image: ${WEB_APP_REPO}:${WEB_APP_VERSION}
    command: ["echo", "Service is reserved for maintenance operations."]
    networks:
     - main
    environment:
      DATABASE_URL: ${WEB_DB_URL}
      REDIS_HOST: ${REDIS_HOST_NAME}
      APP_ENV_NAME: ${ENV_NAME}

  web-app:
    image: ${WEB_APP_REPO}:${WEB_APP_VERSION}
    command: ["gunicorn", "-b", "0.0.0.0:8000", "electrobin.wsgi:application", "--access-logfile", "-", "--error-logfile", "-", "-t", "150", "--workers=2", "--threads=4"]
    ports:
      - '8100:8000'
    networks:
     - main
    environment:
      DATABASE_URL: ${WEB_DB_URL}
      REDIS_HOST: ${REDIS_HOST_NAME}
      VIRTUAL_HOST: ${WEB_APP_VIRTUAL_HOST}
      LETSENCRYPT_HOST: ${WEB_APP_LETSENCRYPT_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
#      LETSENCRYPT_TEST: "true"
      APP_ENV_NAME: ${ENV_NAME}
      # GA_TRACKING_ID: "UA-143247101-4" #demo
      # DEMO_FEEDBACK_SURVEY_ENABLED: "true" #demo
      WEB_APP_ROOT_URL: ${WEB_APP_ROOT_URL}
      REALTIME_API_ROOT_URL: ${REALTIME_API_ROOT_URL}
      SENSOR_ASSET_HOLDER_COMPANY_ID: ${SENSOR_ASSET_HOLDER_COMPANY_ID}
      DEMO_SANDBOX_TEMPLATE_COMPANY_IDS: ${DEMO_SANDBOX_TEMPLATE_COMPANY_IDS}
      ONESIGNAL_APP_ID: ${ONESIGNAL_APP_ID}
    restart: always

  realtime-api:
    image: ${WEB_APP_REPO}:${WEB_APP_VERSION}
    command: ["daphne", "-b", "0.0.0.0", "-p", "8000", "--access-log", "-", "electrobin.asgi:application"]
    ports:
      - '8103:8000'
    networks:
     - main
    environment:
      DATABASE_URL: ${WEB_DB_URL}
      REDIS_HOST: ${REDIS_HOST_NAME}
      VIRTUAL_HOST: ${REALTIME_API_VIRTUAL_HOST}
      LETSENCRYPT_HOST: ${REALTIME_API_LETSENCRYPT_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
#      LETSENCRYPT_TEST: "true"
      APP_ENV_NAME: ${ENV_NAME}
    restart: always

  celery-worker:
    image: ${WEB_APP_REPO}:${WEB_APP_VERSION}
    command: ["celery", "worker", "-A", "electrobin", "--concurrency=4"]
    networks:
      - main
    environment:
      DATABASE_URL: ${WEB_DB_URL}
      REDIS_HOST: ${REDIS_HOST_NAME}
      MQTT_BROKER_HOST: ${MQTT_BROKER_HOST}
      MQTT_USERNAME: ${MQTT_USERNAME}
      MQTT_PASSWORD: ${MQTT_PASSWORD}
      APP_ENV_NAME: ${ENV_NAME}
      WEB_APP_ROOT_URL: ${WEB_APP_ROOT_URL}
      SENSOR_ASSET_HOLDER_COMPANY_ID: ${SENSOR_ASSET_HOLDER_COMPANY_ID}
      ONESIGNAL_APP_ID: ${ONESIGNAL_APP_ID}
      ONESIGNAL_REST_API_KEY: ${ONESIGNAL_REST_API_KEY}
    restart: always
    cpus: 0.5

  mqtt-listener:
    image: ${WEB_APP_REPO}:${WEB_APP_VERSION}
    command: ["python", "apps/sensors/mqtt_listener.py", "${MQTT_BROKER_HOST}"]
    networks:
      - main
    environment:
      MQTT_USERNAME: ${MQTT_USERNAME}
      MQTT_PASSWORD: ${MQTT_PASSWORD}
      REDIS_HOST: ${REDIS_HOST_NAME}
      APP_ENV_NAME: ${ENV_NAME}
      LOG_LEVEL: ${LOG_LEVEL}
    restart: always

  celery-beat:
    image: ${WEB_APP_REPO}:${WEB_APP_VERSION}
    command: ["celery", "beat", "-A", "electrobin", "--pidfile="]
    networks:
      - main
    environment:
      DATABASE_URL: ${WEB_DB_URL}
      REDIS_HOST: ${REDIS_HOST_NAME}
      APP_ENV_NAME: ${ENV_NAME}
    restart: always

networks:
  main:
    name: ${NETWORK_NAME}
    external: true
